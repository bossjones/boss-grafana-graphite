version: "3"

# source: https://github.com/ksindi/kafka-pyspark-demo/blob/master/docker-compose.yml

services:
  grafana-graphite:
    build:
      context: .
      dockerfile: Dockerfile
    image: bossjones/boss-grafana-graphite:latest
    # network_mode: "host"
    # container_name: boss-grafana-graphite
    ports:
      # protocols (newline delimited, pickle)
      # the Grafana web interface
      - '80:80'
      # the Graphite web port
      - '81:81'
      # the StatsD port.
      - '8125:8125/udp'
      # the StatsD administrative port.
      - '8126:8126'
      # carbon: newline
      - '2003:2003'
      # carbon: delimited
      - '2004:2004'
      # carbon: pickle
      - '7002:7002'
    expose:
      # the Grafana web interface
      - '80'
      # the Graphite web port
      - '81'
      # the StatsD port.
      - '8125'
      # the StatsD administrative port.
      - '8126'
      # carbon: newline
      - '2003'
      # carbon: delimited
      - '2004'
      # carbon: pickle
      - '7002'
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    # source: https://github.com/moby/moby/issues/23910
    # Docker should use the host network DNS server
    # extra_hosts:
    #   - "moby:127.0.0.1"
    #   - "default:127.0.0.1"
    #   - "dockerhost:127.0.0.1"
    #   - "baxter:127.0.0.1"
    restart: always
    healthcheck:
      test: curl -s http://localhost/ || exit 1
      interval: 5s
      timeout: 2s
      retries: 15
    # volumes:
    #   - ./data/whisper:/opt/graphite/storage/whisper
    #   - ./data/grafana:/opt/grafana/data
    #   - ./log/graphite:/opt/graphite/storage/log
    volumes:
      - ./data/whisper:/opt/graphite/storage/whisper
      - ./data/grafana:/opt/grafana/data
      - ./log/graphite:/opt/graphite/storage/log
      - ./log/supervisor:/var/log/supervisor

  # jmxtrans:
  #   image: pitrho/jmxtrans:v0.1.1
  #   labels:
  #     io.rancher.scheduler.global: 'true'
  #     io.rancher.scheduler.affinity:host_label: cassandra-server=true
  #     io.rancher.sidekicks: cassandra-metrics-config
  #   log_driver: "json-file"
  #   log_opt:
  #     max-size: "50m"
  #     max-file: "7"
  #   environment:
  #     SECONDS_BETWEEN_RUNS: $SECONDS_BETWEEN_RUNS
  #     CONTINUE_ON_ERROR: $CONTINUE_ON_ERROR
  #     FILENAME: /config/queries.json
  #     JMXTRANS_OPTS: -Djmxtrans.log.level=WARN -Djmxtrans.log.dir=/var/log/jmxtrans -Dlog4j.configuration=file:/config/log4j_logentries.xml
  #     JAVA_OPTS: -cp /usr/share/jmxtrans/lib/jmxtrans-all.jar:/config/logentries-appender.jar -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true
  #   volumes_from:
  #     - cassandra-metrics-config
